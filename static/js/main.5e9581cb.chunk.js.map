{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api/MovieAPI.ts","App.tsx","index.tsx"],"names":["MovieCard","props","movie","className","src","Poster","alt","Title","Plot","MoviesList","movies","map","imdbID","FindMovie","searchMovieTitle","isMovieFound","foundedMovie","addToList","useState","inputQuery","setInputQuery","htmlFor","type","id","placeholder","onChange","e","searchedTitle","target","value","onClick","getMovie","title","a","fetch","response","ok","Error","status","statusText","json","App","setMovies","foundMovie","setFoundMovie","setIsMovieFound","isServerError","setServerError","Response","find","ReactDOM","render","document","getElementById"],"mappings":"+UAOaA,EAA6B,SAACC,GACzC,IAAQC,EAAUD,EAAVC,MAER,OACE,sBAAKC,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,gBAAlB,SACE,qBACEC,IAAKF,EAAMG,OACXC,IAAI,kBAIV,sBAAKH,UAAU,eAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,iBAAlB,SACE,qBACEC,IAAI,wBACJE,IAAI,aAIV,qBAAKH,UAAU,gBAAf,SACE,mBAAGA,UAAU,aAAb,SAA2BD,EAAMK,aAIrC,sBAAKJ,UAAU,UAAf,UACGD,EAAMM,KACP,iCC7BGC,EAA8B,SAACR,GAC1C,IAAQS,EAAWT,EAAXS,OAER,OACE,qBAAKP,UAAU,SAAf,SACGO,EAAOC,KAAI,SAAAT,GAAK,OACf,cAAC,EAAD,CAEEA,MAAOA,GADFA,EAAMU,cCFRC,G,MAA6B,SAAC,GAOrC,IALFC,EAKC,EALDA,iBACAC,EAIC,EAJDA,aACAC,EAGC,EAHDA,aACAC,EAEC,EAFDA,UAGF,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAQA,OACE,qCACE,uBAAMjB,UAAU,QAAhB,UACE,sBAAKA,UAAU,QAAf,UACE,uBAAOA,UAAU,QAAQkB,QAAQ,cAAjC,yBAIA,qBAAKlB,UAAU,UAAf,SACE,uBACEmB,KAAK,OACLC,GAAG,cACHC,YAAY,0BACZrB,UAAU,kBACVsB,SApBQ,SAACC,GACnB,IAAMC,EAAgBD,EAAEE,OAAOC,MAE/BT,EAAcO,SAoBNZ,GACA,mBAAGZ,UAAU,iBAAb,qDAMJ,sBAAKA,UAAU,mBAAf,UACE,qBAAKA,UAAU,UAAf,SACE,wBACEmB,KAAK,SACLnB,UAAU,kBACV2B,QAAS,kBAAMhB,EAAiBK,IAHlC,4BASF,qBAAKhB,UAAU,UAAf,SACE,wBACEmB,KAAK,SACLnB,UAAU,oBACV2B,QAASb,EAHX,qCAWN,sBAAKd,UAAU,YAAf,UACE,oBAAIA,UAAU,QAAd,qBACCa,GAAgB,cAAC,EAAD,CAAWd,MAAOc,YC5E9Be,EAAQ,uCAAG,WAAOC,GAAP,eAAAC,EAAA,sEACCC,MAAM,mCAAD,OAHb,WAGa,cAAkDF,IADxD,WAChBG,EADgB,QAGRC,GAHQ,sBAId,IAAIC,MAAJ,UAAaF,EAASG,OAAtB,aAAiCH,EAASI,aAJ5B,gCAOfJ,EAASK,QAPM,2CAAH,sDCIRC,G,MAAgB,WAC3B,MAA4BvB,mBAAkB,IAA9C,mBAAOR,EAAP,KAAegC,EAAf,KACA,EAAoCxB,mBAAuB,MAA3D,mBAAOyB,EAAP,KAAmBC,EAAnB,KACA,EAAwC1B,oBAAS,GAAjD,mBAAOH,EAAP,KAAqB8B,EAArB,KACA,EAAwC3B,oBAAS,GAAjD,mBAAO4B,EAAP,KAAsBC,EAAtB,KAEMjC,EAAgB,uCAAG,WAAOkB,GAAP,eAAAC,EAAA,+EAEDF,EAASC,GAFR,OAIE,UAFjB9B,EAFe,QAIX8C,UACRJ,EAAc1C,GACd2C,GAAgB,IAEhBA,GAAgB,GARG,gDAWrBE,GAAe,GAXM,yDAAH,sDA2BtB,OACE,sBAAK5C,UAAU,OAAf,UACE,qBAAKA,UAAU,eAAf,SACE,cAAC,EAAD,CAAYO,OAAQA,MAEtB,sBAAKP,UAAU,UAAf,UACE,cAAC,EAAD,CACEW,iBAAkBA,EAClBC,aAAcA,EACdC,aAAc2B,EACd1B,UAtBU,WACX0B,IAIDjC,EAAOuC,MAAK,SAAA/C,GAAK,OAAIA,EAAMU,SAAW+B,EAAW/B,WAIrD8B,EAAU,GAAD,mBAAKhC,GAAL,CAAaiC,SAgBjBG,GAAiB,uFChD1BI,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.5e9581cb.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie;\n};\n\nexport const MovieCard: React.FC<Props> = (props) => {\n  const { movie } = props;\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={movie.Poster}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\">{movie.Title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          {movie.Plot}\n          <br />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = (props) => {\n  const { movies } = props;\n\n  return (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard\n          key={movie.imdbID}\n          movie={movie}\n        />\n      ))}\n    </div>\n  );\n};\n","/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React, { useState } from 'react';\nimport './FindMovie.scss';\n\nimport { MovieCard } from '../MovieCard';\n\ntype Props = {\n  searchMovieTitle: (title:string) => void;\n  isMovieFound: boolean;\n  foundedMovie: Movie | null;\n  addToList: () => void;\n};\n\nexport const FindMovie: React.FC<Props> = (\n  {\n    searchMovieTitle,\n    isMovieFound,\n    foundedMovie,\n    addToList,\n  },\n) => {\n  const [inputQuery, setInputQuery] = useState('');\n\n  const handleInput = (e:React.ChangeEvent<HTMLInputElement>) => {\n    const searchedTitle = e.target.value;\n\n    setInputQuery(searchedTitle);\n  };\n\n  return (\n    <>\n      <form className=\"movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-danger\"\n              onChange={handleInput}\n            />\n          </div>\n          {!isMovieFound && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={() => searchMovieTitle(inputQuery)}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={addToList}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        {foundedMovie && <MovieCard movie={foundedMovie} />}\n      </div>\n    </>\n  );\n};\n","const OMDB_KEY = 'da979bab';\n\nexport const getMovie = async (title:string) => {\n  const response = await fetch(`https://www.omdbapi.com/?apikey=${OMDB_KEY}&t=${title}`);\n\n  if (!response.ok) {\n    throw new Error(`${response.status}: ${response.statusText}`);\n  }\n\n  return response.json();\n};\n","import { useState } from 'react';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { getMovie } from './api/MovieAPI';\nimport './App.scss';\n\nexport const App: React.FC = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n  const [foundMovie, setFoundMovie] = useState<Movie | null>(null);\n  const [isMovieFound, setIsMovieFound] = useState(true);\n  const [isServerError, setServerError] = useState(false);\n\n  const searchMovieTitle = async (title:string) => {\n    try {\n      const movie = await getMovie(title);\n\n      if (movie.Response === 'True') {\n        setFoundMovie(movie);\n        setIsMovieFound(true);\n      } else {\n        setIsMovieFound(false);\n      }\n    } catch (error) {\n      setServerError(true);\n    }\n  };\n\n  const addToList = () => {\n    if (!foundMovie) {\n      return;\n    }\n\n    if (movies.find(movie => movie.imdbID === foundMovie.imdbID)) {\n      return;\n    }\n\n    setMovies([...movies, foundMovie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie\n          searchMovieTitle={searchMovieTitle}\n          isMovieFound={isMovieFound}\n          foundedMovie={foundMovie}\n          addToList={addToList}\n        />\n\n        {isServerError && <p>Server request failed. Please try again later.</p>}\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}